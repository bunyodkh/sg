# Generated by Django 5.2.3 on 2025-07-08 03:57

import django.db.models.deletion
import django_countries.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DevelopmentStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Stage Name')),
                ('description', models.TextField(blank=True, max_length=200, null=True, verbose_name='Description')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name': 'Development Stage',
                'verbose_name_plural': 'Development Stage',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvestmentStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Stage Name')),
                ('description', models.TextField(blank=True, max_length=200, null=True, verbose_name='Description')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name': 'Funding Stage',
                'verbose_name_plural': 'Funding Stage',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationAffiliation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Affiliation')),
            ],
            options={
                'verbose_name': 'Organization Affiliation',
                'verbose_name_plural': 'Organization Affiliations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Organization Type Name')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Organization Type',
                'verbose_name_plural': 'Organization Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StartupCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100, verbose_name='Category')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Startup Category',
                'verbose_name_plural': 'Startup Categories',
                'ordering': ['category'],
            },
        ),
        migrations.CreateModel(
            name='SupportProgramType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Support Program Type',
                'verbose_name_plural': 'Support Program Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TargetAudience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audience', models.CharField(help_text='Target audience for the startup', max_length=100, verbose_name='Audience')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name': 'Target Audience',
                'verbose_name_plural': 'Target Audiences',
                'ordering': ['audience'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('website', models.CharField(blank=True, null=True, verbose_name='Website')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('capacity', models.DecimalField(blank=True, decimal_places=0, help_text='Total funds available for investment in USD', max_digits=15, null=True, verbose_name='Funds Available')),
                ('apply_link', models.CharField(blank=True, help_text='Link to apply for investment or partnership', null=True, verbose_name='Application Link')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('affiliation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='investors', to='registry.organizationaffiliation', verbose_name='Affiliation')),
                ('organization_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organizations', to='registry.organizationtype', verbose_name='Organization Type')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Startup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('website', models.CharField(blank=True, null=True, verbose_name='Website')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='Country')),
                ('region', models.CharField(blank=True, max_length=100, null=True, verbose_name='Region')),
                ('show_on_website', models.BooleanField(default=True, help_text='Show startup on the startup explore page.', verbose_name='Show on Website')),
                ('development_stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='startups', to='registry.developmentstage', verbose_name='Development Stage')),
                ('funding_stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='startups', to='registry.investmentstage', verbose_name='Funding Stage')),
                ('categories', models.ManyToManyField(blank=True, related_name='startups', to='registry.startupcategory', verbose_name='Categories')),
                ('target_audience', models.ManyToManyField(blank=True, help_text='Target audience for the startup', related_name='startups', to='registry.targetaudience', verbose_name='Target Audience')),
            ],
            options={
                'verbose_name': 'Startup',
                'verbose_name_plural': 'Startups',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Investment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=0, max_digits=15, verbose_name='Investment Amount')),
                ('details', models.TextField(blank=True, help_text='Additional details about the investment', null=True, verbose_name='Details')),
                ('date', models.DateField(blank=True, help_text='Date of the deal', null=True, verbose_name='Investment Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='investments', to='registry.investmentstage', verbose_name='Investment Stage')),
                ('investor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investments', to='registry.organization', verbose_name='Investor')),
                ('startup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investments', to='registry.startup', verbose_name='Startup')),
            ],
            options={
                'verbose_name': 'Investment',
                'verbose_name_plural': 'Investments',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='SupportProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('website', models.CharField(blank=True, null=True, verbose_name='Website')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('mode', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('hybrid', 'Hybrid')], default='online', help_text='Mode of operation for the incubator', max_length=50, verbose_name='Mode')),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='Country')),
                ('region', models.CharField(blank=True, max_length=100, null=True, verbose_name='Region')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('archived', 'Archived')], default='active', help_text='Current status of the incubator program', max_length=50, verbose_name='Status')),
                ('managing_organizations', models.ManyToManyField(blank=True, help_text='Organizations managing the incubator program', related_name='programs', to='registry.organization', verbose_name='Managing Organizations')),
                ('program_type', models.ForeignKey(blank=True, help_text='Type of support program', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='programs', to='registry.supportprogramtype', verbose_name='Program Type')),
            ],
            options={
                'verbose_name': 'Support Program',
                'verbose_name_plural': 'Support Programs',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SupportProgramCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Cycle Name')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='upcoming', help_text='Current status of the program cycle', max_length=50, verbose_name='Status')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('duration', models.CharField(blank=True, help_text='Duration of the program (e.g., 6 months, 1 year)', max_length=100, null=True, verbose_name='Duration')),
                ('capacity', models.CharField(blank=True, help_text='Maximum number of startups that can be supported at a time', null=True, verbose_name='Capacity')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the program cycle', null=True, verbose_name='Notes')),
                ('fee_structure', models.TextField(blank=True, help_text='Details about the fee structure for the program (if any)', null=True, verbose_name='Fee Structure')),
                ('application_status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed'), ('will be announced', 'Will be announced')], default='open', help_text='Current application status for the program cycle', max_length=50, verbose_name='Application Status')),
                ('apply_link', models.CharField(blank=True, help_text='Link to apply for the incubator program', null=True, verbose_name='Application Link')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('participating_startups', models.ManyToManyField(blank=True, help_text='Startups participating in this program cycle', related_name='program_cycles', to='registry.startup', verbose_name='Participating Startups')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cycles', to='registry.supportprogram', verbose_name='Program')),
            ],
            options={
                'verbose_name': 'Support Program Cycle',
                'verbose_name_plural': 'Support Program Cycles',
                'ordering': ['start_date'],
            },
        ),
    ]
